// <auto-generated />
using System;
using FitnessApp.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessApp.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exersices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Classic exercise for chest muscles",
                            Name = "Push-ups",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Exercise for legs and glutes",
                            Name = "Squats",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Exercise for back muscles",
                            Name = "Pull-ups",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Running in place or on a treadmill",
                            Name = "Running",
                            Type = "Cardio"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Jumping in place or with a jump rope",
                            Name = "Jumping",
                            Type = "Cardio"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Riding a bicycle",
                            Name = "Cycling",
                            Type = "Cardio"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Swimming in a pool",
                            Name = "Swimming",
                            Type = "Cardio"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Stretching muscles to improve flexibility",
                            Name = "Stretching",
                            Type = "Stretching"
                        },
                        new
                        {
                            Id = 9,
                            Description = "A complex of stretching and flexibility exercises",
                            Name = "Yoga",
                            Type = "Stretching"
                        },
                        new
                        {
                            Id = 10,
                            Description = "A complex of exercises for muscle strengthening and flexibility",
                            Name = "Pilates",
                            Type = "Stretching"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Exercise for abdominal muscles",
                            Name = "Abdominals",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Exercise for back and arms",
                            Name = "Pull",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Exercise for chest muscles",
                            Name = "Press",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Rowing on a rowing machine",
                            Name = "Rowing",
                            Type = "Cardio"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Fast walking",
                            Name = "Walking",
                            Type = "Cardio"
                        });
                });

            modelBuilder.Entity("FitnessApp.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<decimal>("Carbohydrates")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Protein")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = 155,
                            Carbohydrates = 1m,
                            Category = "Meat",
                            Fat = 11m,
                            Name = "Eggs",
                            Protein = 13m
                        },
                        new
                        {
                            Id = 2,
                            Calories = 389,
                            Carbohydrates = 66m,
                            Category = "Grains",
                            Fat = 6m,
                            Name = "Oatmeal",
                            Protein = 13m
                        },
                        new
                        {
                            Id = 3,
                            Calories = 89,
                            Carbohydrates = 23m,
                            Category = "Fruits",
                            Fat = 0m,
                            Name = "Banana",
                            Protein = 1m
                        },
                        new
                        {
                            Id = 4,
                            Calories = 165,
                            Carbohydrates = 0m,
                            Category = "Meat",
                            Fat = 3m,
                            Name = "Chicken Breast",
                            Protein = 31m
                        },
                        new
                        {
                            Id = 5,
                            Calories = 360,
                            Carbohydrates = 77m,
                            Category = "Grains",
                            Fat = 1m,
                            Name = "Rice",
                            Protein = 7m
                        },
                        new
                        {
                            Id = 6,
                            Calories = 34,
                            Carbohydrates = 7m,
                            Category = "Vegetables",
                            Fat = 0m,
                            Name = "Broccoli",
                            Protein = 3m
                        },
                        new
                        {
                            Id = 7,
                            Calories = 208,
                            Carbohydrates = 0m,
                            Category = "Fish",
                            Fat = 13m,
                            Name = "Salmon",
                            Protein = 20m
                        },
                        new
                        {
                            Id = 8,
                            Calories = 400,
                            Carbohydrates = 2m,
                            Category = "Dairy",
                            Fat = 30m,
                            Name = "Cheese",
                            Protein = 25m
                        },
                        new
                        {
                            Id = 9,
                            Calories = 340,
                            Carbohydrates = 62m,
                            Category = "Grains",
                            Fat = 2m,
                            Name = "Buckwheat",
                            Protein = 13m
                        },
                        new
                        {
                            Id = 10,
                            Calories = 57,
                            Carbohydrates = 15m,
                            Category = "Fruits",
                            Fat = 0m,
                            Name = "Pear",
                            Protein = 0m
                        },
                        new
                        {
                            Id = 11,
                            Calories = 213,
                            Carbohydrates = 0m,
                            Category = "Meat",
                            Fat = 11m,
                            Name = "Beef",
                            Protein = 27m
                        },
                        new
                        {
                            Id = 12,
                            Calories = 77,
                            Carbohydrates = 17m,
                            Category = "Vegetables",
                            Fat = 0m,
                            Name = "Potato",
                            Protein = 2m
                        },
                        new
                        {
                            Id = 13,
                            Calories = 130,
                            Carbohydrates = 0m,
                            Category = "Fish",
                            Fat = 3m,
                            Name = "Tuna",
                            Protein = 25m
                        },
                        new
                        {
                            Id = 14,
                            Calories = 60,
                            Carbohydrates = 5m,
                            Category = "Dairy",
                            Fat = 3m,
                            Name = "Milk ",
                            Protein = 3m
                        },
                        new
                        {
                            Id = 15,
                            Calories = 47,
                            Carbohydrates = 12m,
                            Category = "Fruits",
                            Fat = 0m,
                            Name = "Orange",
                            Protein = 1m
                        });
                });

            modelBuilder.Entity("FitnessApp.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoalType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Goals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lose 5 kg of weight",
                            EndDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Weight Loss",
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Gain 3 kg of muscle mass",
                            EndDate = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Mass Gain",
                            StartDate = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Reduce body fat percentage to 15%",
                            EndDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Fat Percentage Reduction",
                            StartDate = new DateTime(2023, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lose 3 kg of weight",
                            EndDate = new DateTime(2023, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Weight Loss",
                            StartDate = new DateTime(2023, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Gain 2 kg of muscle mass",
                            EndDate = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Mass Gain",
                            StartDate = new DateTime(2023, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "Reduce body fat percentage to 18%",
                            EndDate = new DateTime(2023, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Fat Percentage Reduction",
                            StartDate = new DateTime(2023, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Description = "Lose 4 kg of weight",
                            EndDate = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Weight Loss",
                            StartDate = new DateTime(2023, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            Description = "Gain 4 kg of muscle mass",
                            EndDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Mass Gain",
                            StartDate = new DateTime(2023, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            Description = "Reduce body fat percentage to 20%",
                            EndDate = new DateTime(2024, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Fat Percentage Reduction",
                            StartDate = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            Description = "Lose 2 kg of weight",
                            EndDate = new DateTime(2024, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Weight Loss",
                            StartDate = new DateTime(2023, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            Description = "Gain 5 kg of muscle mass",
                            EndDate = new DateTime(2024, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Mass Gain",
                            StartDate = new DateTime(2024, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            Description = "Reduce body fat percentage to 16%",
                            EndDate = new DateTime(2024, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Fat Percentage Reduction",
                            StartDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            Description = "Lose 6 kg of weight",
                            EndDate = new DateTime(2024, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Weight Loss",
                            StartDate = new DateTime(2024, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            Description = "Gain 3 kg of muscle mass",
                            EndDate = new DateTime(2024, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Mass Gain",
                            StartDate = new DateTime(2024, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            Description = "Reduce body fat percentage to 17%",
                            EndDate = new DateTime(2024, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GoalType = "Fat Percentage Reduction",
                            StartDate = new DateTime(2024, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 15
                        });
                });

            modelBuilder.Entity("FitnessApp.Models.Nutrition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<decimal>("Carbohydrates")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MealType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Protein")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Nutritions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = 400,
                            Carbohydrates = 50m,
                            Date = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 10m,
                            MealType = "Breakfast",
                            Protein = 20m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Calories = 550,
                            Carbohydrates = 60m,
                            Date = new DateTime(2023, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 15m,
                            MealType = "Lunch",
                            Protein = 30m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Calories = 450,
                            Carbohydrates = 40m,
                            Date = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 12m,
                            MealType = "Dinner",
                            Protein = 25m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Calories = 350,
                            Carbohydrates = 45m,
                            Date = new DateTime(2023, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 8m,
                            MealType = "Breakfast",
                            Protein = 18m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Calories = 600,
                            Carbohydrates = 70m,
                            Date = new DateTime(2023, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 18m,
                            MealType = "Lunch",
                            Protein = 35m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Calories = 500,
                            Carbohydrates = 50m,
                            Date = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 13m,
                            MealType = "Dinner",
                            Protein = 28m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Calories = 420,
                            Carbohydrates = 55m,
                            Date = new DateTime(2023, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 11m,
                            MealType = "Breakfast",
                            Protein = 22m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            Calories = 580,
                            Carbohydrates = 65m,
                            Date = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 16m,
                            MealType = "Lunch",
                            Protein = 32m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            Calories = 480,
                            Carbohydrates = 45m,
                            Date = new DateTime(2023, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 14m,
                            MealType = "Dinner",
                            Protein = 27m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            Calories = 380,
                            Carbohydrates = 48m,
                            Date = new DateTime(2023, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 9m,
                            MealType = "Breakfast",
                            Protein = 19m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            Calories = 620,
                            Carbohydrates = 75m,
                            Date = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 20m,
                            MealType = "Lunch",
                            Protein = 38m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            Calories = 520,
                            Carbohydrates = 55m,
                            Date = new DateTime(2024, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 15m,
                            MealType = "Dinner",
                            Protein = 30m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            Calories = 440,
                            Carbohydrates = 58m,
                            Date = new DateTime(2024, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 12m,
                            MealType = "Breakfast",
                            Protein = 24m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            Calories = 600,
                            Carbohydrates = 70m,
                            Date = new DateTime(2024, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 18m,
                            MealType = "Lunch",
                            Protein = 36m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            Calories = 500,
                            Carbohydrates = 50m,
                            Date = new DateTime(2024, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fat = 13m,
                            MealType = "Dinner",
                            Protein = 29m,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("FitnessApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("UsersHistory");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1990, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            Gender = "Male",
                            Height = 1.83m,
                            Name = "JohnDoe",
                            Password = "123456",
                            Weight = 80.5m
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1995, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            Gender = "Female",
                            Height = 1.70m,
                            Name = "JaneSmith",
                            Password = "789012",
                            Weight = 65.0m
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1987, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alex.johnson@example.com",
                            Gender = "Male",
                            Height = 1.90m,
                            Name = "AlexJohnson",
                            Password = "456789",
                            Weight = 90.0m
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(1992, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.brown@example.com",
                            Gender = "Female",
                            Height = 1.65m,
                            Name = "EmilyBrown",
                            Password = "012345",
                            Weight = 55.0m
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(1989, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.wilson@example.com",
                            Gender = "Male",
                            Height = 1.78m,
                            Name = "MichaelWilson",
                            Password = "678901",
                            Weight = 75.0m
                        },
                        new
                        {
                            Id = 6,
                            Birthdate = new DateTime(1991, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarah.davis@example.com",
                            Gender = "Female",
                            Height = 1.68m,
                            Name = "SarahDavis",
                            Password = "234567",
                            Weight = 60.0m
                        },
                        new
                        {
                            Id = 7,
                            Birthdate = new DateTime(1988, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "david.garcia@example.com",
                            Gender = "Male",
                            Height = 1.85m,
                            Name = "DavidGarcia",
                            Password = "890123",
                            Weight = 85.0m
                        },
                        new
                        {
                            Id = 8,
                            Birthdate = new DateTime(1993, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jessica.miller@example.com",
                            Gender = "Female",
                            Height = 1.63m,
                            Name = "JessicaMiller",
                            Password = "345678",
                            Weight = 58.0m
                        },
                        new
                        {
                            Id = 9,
                            Birthdate = new DateTime(1986, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "christopher.rodriguez@example.com",
                            Gender = "Male",
                            Height = 1.95m,
                            Name = "ChristopherRodriguez",
                            Password = "901234",
                            Weight = 95.0m
                        },
                        new
                        {
                            Id = 10,
                            Birthdate = new DateTime(1994, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jennifer.wilson@example.com",
                            Gender = "Female",
                            Height = 1.67m,
                            Name = "JenniferWilson",
                            Password = "567890",
                            Weight = 62.0m
                        },
                        new
                        {
                            Id = 11,
                            Birthdate = new DateTime(1990, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "matthew.lee@example.com",
                            Gender = "Male",
                            Height = 1.75m,
                            Name = "MatthewLee",
                            Password = "012345",
                            Weight = 70.0m
                        },
                        new
                        {
                            Id = 12,
                            Birthdate = new DateTime(1991, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "elizabeth.martin@example.com",
                            Gender = "Female",
                            Height = 1.62m,
                            Name = "ElizabethMartin",
                            Password = "678901",
                            Weight = 57.0m
                        },
                        new
                        {
                            Id = 13,
                            Birthdate = new DateTime(1985, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "daniel.taylor@example.com",
                            Gender = "Male",
                            Height = 1.88m,
                            Name = "DanielTaylor",
                            Password = "234567",
                            Weight = 88.0m
                        },
                        new
                        {
                            Id = 14,
                            Birthdate = new DateTime(1992, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "katherine.garcia@example.com",
                            Gender = "Female",
                            Height = 1.66m,
                            Name = "KatherineGarcia",
                            Password = "890123",
                            Weight = 61.0m
                        },
                        new
                        {
                            Id = 15,
                            Birthdate = new DateTime(1993, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anthony.jackson@example.com",
                            Gender = "Male",
                            Height = 1.80m,
                            Name = "AnthonyJackson",
                            Password = "345678",
                            Weight = 78.0m
                        });
                });

            modelBuilder.Entity("FitnessApp.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaloriesBurned")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CaloriesBurned = 500,
                            Date = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 45,
                            Type = "Cardio",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CaloriesBurned = 650,
                            Date = new DateTime(2023, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            Type = "Strength",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CaloriesBurned = 300,
                            Date = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 30,
                            Type = "Yoga",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CaloriesBurned = 400,
                            Date = new DateTime(2023, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 35,
                            Type = "Cardio",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CaloriesBurned = 550,
                            Date = new DateTime(2023, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 50,
                            Type = "Strength",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CaloriesBurned = 350,
                            Date = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 40,
                            Type = "Yoga",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CaloriesBurned = 500,
                            Date = new DateTime(2023, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 45,
                            Type = "Cardio",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CaloriesBurned = 650,
                            Date = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            Type = "Strength",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CaloriesBurned = 300,
                            Date = new DateTime(2023, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 30,
                            Type = "Yoga",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CaloriesBurned = 400,
                            Date = new DateTime(2023, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 35,
                            Type = "Cardio",
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            CaloriesBurned = 550,
                            Date = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 50,
                            Type = "Strength",
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            CaloriesBurned = 350,
                            Date = new DateTime(2024, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 40,
                            Type = "Yoga",
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            CaloriesBurned = 500,
                            Date = new DateTime(2024, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 45,
                            Type = "Cardio",
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            CaloriesBurned = 650,
                            Date = new DateTime(2024, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 60,
                            Type = "Strength",
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            CaloriesBurned = 300,
                            Date = new DateTime(2024, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 30,
                            Type = "Yoga",
                            UserId = 15
                        });
                });

            modelBuilder.Entity("FitnessApp.Models.WorkoutExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutExercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExerciseId = 4,
                            Reps = 15,
                            Sets = 3,
                            WorkoutId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExerciseId = 2,
                            Reps = 10,
                            Sets = 4,
                            WorkoutId = 2
                        },
                        new
                        {
                            Id = 3,
                            ExerciseId = 9,
                            Reps = 5,
                            Sets = 2,
                            WorkoutId = 3
                        },
                        new
                        {
                            Id = 4,
                            ExerciseId = 5,
                            Reps = 20,
                            Sets = 3,
                            WorkoutId = 4
                        },
                        new
                        {
                            Id = 5,
                            ExerciseId = 1,
                            Reps = 8,
                            Sets = 4,
                            WorkoutId = 5
                        },
                        new
                        {
                            Id = 6,
                            ExerciseId = 10,
                            Reps = 3,
                            Sets = 2,
                            WorkoutId = 6
                        },
                        new
                        {
                            Id = 7,
                            ExerciseId = 6,
                            Reps = 12,
                            Sets = 3,
                            WorkoutId = 7
                        },
                        new
                        {
                            Id = 8,
                            ExerciseId = 3,
                            Reps = 6,
                            Sets = 4,
                            WorkoutId = 8
                        },
                        new
                        {
                            Id = 9,
                            ExerciseId = 11,
                            Reps = 10,
                            Sets = 2,
                            WorkoutId = 9
                        },
                        new
                        {
                            Id = 10,
                            ExerciseId = 7,
                            Reps = 15,
                            Sets = 3,
                            WorkoutId = 10
                        },
                        new
                        {
                            Id = 11,
                            ExerciseId = 12,
                            Reps = 8,
                            Sets = 4,
                            WorkoutId = 11
                        },
                        new
                        {
                            Id = 12,
                            ExerciseId = 13,
                            Reps = 5,
                            Sets = 2,
                            WorkoutId = 12
                        },
                        new
                        {
                            Id = 13,
                            ExerciseId = 8,
                            Reps = 10,
                            Sets = 3,
                            WorkoutId = 13
                        },
                        new
                        {
                            Id = 14,
                            ExerciseId = 14,
                            Reps = 6,
                            Sets = 4,
                            WorkoutId = 14
                        },
                        new
                        {
                            Id = 15,
                            ExerciseId = 15,
                            Reps = 15,
                            Sets = 2,
                            WorkoutId = 15
                        });
                });

            modelBuilder.Entity("FitnessApp.Models.Goal", b =>
                {
                    b.HasOne("FitnessApp.Models.User", "User")
                        .WithMany("Goals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Models.Nutrition", b =>
                {
                    b.HasOne("FitnessApp.Models.User", "User")
                        .WithMany("Nutritions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Models.Workout", b =>
                {
                    b.HasOne("FitnessApp.Models.User", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Models.WorkoutExercise", b =>
                {
                    b.HasOne("FitnessApp.Models.Exercise", "Exercise")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessApp.Models.Workout", "Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("FitnessApp.Models.Exercise", b =>
                {
                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("FitnessApp.Models.User", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("Nutritions");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("FitnessApp.Models.Workout", b =>
                {
                    b.Navigation("WorkoutExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
